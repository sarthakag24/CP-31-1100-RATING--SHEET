// IT IS AS SIMPLE JUST USE KADANE CODE WHILE ADDDING SEE IF THE PARITY IS SAME ORR NOT AND WORK IN THAT MANNER

#include <bits/stdc++.h>
using namespace std;

bool check(int a, int b) {
     a = abs(a) ;  
     b = abs(b) ; 
    return !((a % 2) ^ (b % 2));  // true if same parity
}

void solve() {
    int n;
    cin >> n;
    vector<int> v(n);

    for (int i = 0; i < n; i++) cin >> v[i];

    int curr_sum = v[0];
    int max_sum = v[0];

    for (int i = 1; i < n; i++) {
        if (check(v[i], v[i - 1])) {
           
            curr_sum = v[i];
        } else {
          
            curr_sum += v[i];
        }

 
        if (curr_sum < v[i]) curr_sum = v[i];

        max_sum = max(max_sum, curr_sum);
    }

    cout << max_sum << endl;
}
int main() {
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}

